---
import Layout from '../layouts/Layout.astro';
import Prod from './b2b-saaskit/00_production.md';
import Doppler from './b2b-saaskit/01_doppler.md';
import DopplerTutorial from './b2b-saaskit/02_doppler_tutorial.md';
import PropelAuth from './b2b-saaskit/03_propelauth.md';
import Supabase from './b2b-saaskit/04_supabase.md';
import Fogbender from './b2b-saaskit/05_fogbender.md';
import Congrats from './b2b-saaskit/99_congrats.md';
export const prerender = true;
const checks = [
	{
		stepName: '01_DOPPLER',
		havePassed: () => {
			return import.meta.env.DOPPLER_PROJECT !== undefined;
		},
	},
	{
		stepName: '02_DOPPLER_TUTORIAL',
		havePassed: () => {
			return import.meta.env.DOPPLER_TUTORIAL !== undefined;
		},
	},
	{
		stepName: '03_PROPELAUTH',
		havePassed: () => {
			return import.meta.env.PUBLIC_AUTH_URL !== undefined;
		},
	},
	{
		stepName: '04_SUPABASE',
		havePassed: () => {
			return import.meta.env.DATABASE_URL !== undefined;
		},
	},
	{
		stepName: '05_FOGBENDER',
		havePassed: () => {
			return (
				import.meta.env.PUBLIC_FOGBENDER_WIDGET_ID !== undefined &&
				import.meta.env.FOGBENDER_SECRET !== undefined
			);
		},
	},
] as const satisfies Readonly<
	{
		stepName: string;
		havePassed: () => boolean;
	}[]
>;
const firstFailedCheck = import.meta.env.PROD
	? ('00_prod' as const)
	: checks.find((check) => !check.havePassed())?.stepName;
---

<Layout title="Welcome to Prompts with Friends">
	<main class="container">
		<h1>Welcome to <span class="text-gradient">Prompts with Friends</span></h1>
		<div class="instructions prose max-w-none">
			{firstFailedCheck === '00_prod' && <Prod />}
			{firstFailedCheck === '01_DOPPLER' && <Doppler />}
			{firstFailedCheck === '02_DOPPLER_TUTORIAL' && <DopplerTutorial />}
			{firstFailedCheck === '03_PROPELAUTH' && <PropelAuth />}
			{firstFailedCheck === '04_SUPABASE' && <Supabase />}
			{firstFailedCheck === '05_FOGBENDER' && <Fogbender />}
			{firstFailedCheck === undefined && <Congrats />}
		</div>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
</style>
<style is:global>
	:root {
		--accent: 124, 58, 237;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
	}
	html {
		font-family: system-ui, sans-serif;
		background-color: #f6f6f6;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}
</style>
